$breakpoints: (
  "sp": 960,
);

@mixin sp {
  @media (width <= #{map-get($breakpoints, sp)}px) {
    @content;
  }
}

@mixin pc {
  @media not all and (width <= #{map-get($breakpoints, sp)}px) {
    @content;
  }
}

@mixin hover {
  @media (hover: hover) {
    @content;
  }
}

@mixin hover-none {
  @media (hover: none) {
    @content;
  }
}

@mixin reduce {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin max-w($wid) {
  @media (width <= #{$wid}px) {
    @content;
  }
}

@mixin min-w($wid) {
  @media (width >= #{$wid}px) {
    @content;
  }
}

/* stylelint-disable media-feature-name-no-unknown */
@mixin min-max-w($min-wid, $max-wid) {
  @media (#{$min-wid}px <= width <= #{$max-wid}px) {
    @content;
  }
}

@mixin max-h($wid) {
  @media (height <= #{$wid}px) {
    @content;
  }
}

@mixin min-h($wid) {
  @media (height >= #{$wid}px) {
    @content;
  }
}

@mixin narrow {
  @include max-w(360) {
    @content;
  }
}

@mixin port {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin land {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin pc-port {
  @media (width > #{map-get($breakpoints, sp)}px) and (orientation: portrait) {
    @content;
  }
}

@mixin pc-land {
  @media (width > #{map-get($breakpoints, sp)}px) and (orientation: landscape) {
    @content;
  }
}

@mixin sp-port {
  @media (width <= #{map-get($breakpoints, sp)}px) and (orientation: portrait) {
    @content;
  }
}

@mixin sp-land {
  @media (width <= #{map-get($breakpoints, sp)}px) and (orientation: landscape) {
    @content;
  }
}

@mixin firefox {
  @-moz-document url-prefix() {
    @content;
  }
}
